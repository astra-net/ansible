---
- hosts: '{{ inventory }}'
  serial: "{{ stride | default(1) }}"
  gather_facts: yes
  vars:
    duplicate_peerid:
    - Qmpeerid1tobeadded
    - Qmpeerid2tobeadded
    - Qmpeerid3tobeadded

  tasks:

  - name: "get role of the node"
    shell: "curl -s --request POST 'http://127.0.0.1:9500/' --header 'Content-Type: application/json' --data-raw '{ \"jsonrpc\": \"2.0\", \"method\": \"hmyv2_getNodeMetadata\", \"params\": [], \"id\": 1}' | jq -r '.result.role'"
    register: nodeRole

  - debug:
      var: nodeRole.stdout

  - name: "get node peerid"
    shell: "curl -s --request POST 'http://127.0.0.1:9500/' --header 'Content-Type: application/json' --data-raw '{ \"jsonrpc\": \"2.0\", \"method\": \"hmyv2_getNodeMetadata\", \"params\": [], \"id\": 1}' | jq -r '.result.peerid'"
    register: peerid

  - debug:
      var: peerid.stdout

  - debug:
      var: duplicate_peerid

  - name: "stop, remove node peerid and restart harmony service"
    block:
    - debug: 
        msg: "Let's reset the node peer id"

    - name: "stop harmony service"
      become: true
      become_user: root
      systemd:
        name: harmony
        state: stopped

    - name: "delete node peer id"
      file: 
        path: .hmykey
        state: absent

    - name: "restart harmony service"
      become: true
      become_user: root
      systemd:
        name: harmony
        state: started

    - name: "check Explorer node /node-sync is true every 15 sec for 5 minutes"
      uri:
        url: http://localhost:5000/node-sync
      register: syncstatus
      until: syncstatus.status == 200 and syncstatus.json is defined and syncstatus.json
      retries: 20
      delay: 15

    - debug:
        var: syncstatus.json

    - name: "wait 30 seconds for node sync to stabilize"
      pause:
        seconds: 30

    when: nodeRole.stdout == 'ExplorerNode' and peerid.stdout in duplicate_peerid
